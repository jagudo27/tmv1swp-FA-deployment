{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.13.1.58284",
      "templateHash": "5500347662394089955"
    }
  },
  "parameters": {
    "functionAppName": {
      "type": "string",
      "defaultValue": "[format('tmv1swp-{0}', uniqueString(resourceGroup().id))]",
      "metadata": {
        "description": "The name of the Azure Function app."
      }
    },
    "storageAccountName": {
      "type": "string",
      "defaultValue": "[format('tmv1swp{0}', uniqueString(resourceGroup().id))]",
      "metadata": {
        "description": "Nombre del Storage Account (3-24 minúsculas, único en Azure)"
      }
    },
    "logAnalyticsWorkspaceName": {
      "type": "string",
      "defaultValue": "[format('law-tmv1swp-{0}', uniqueString(resourceGroup().id))]",
      "metadata": {
        "description": "Nombre del Log Analytics Workspace"
      }
    },
    "dataCollectionEndpointName": {
      "type": "string",
      "defaultValue": "[format('dce-tmv1swp-{0}', uniqueString(resourceGroup().id))]",
      "metadata": {
        "description": "Nombre del Data Collection Endpoint"
      }
    },
    "dataCollectionRuleName": {
      "type": "string",
      "defaultValue": "[format('dcr-tmv1swp-{0}', uniqueString(resourceGroup().id))]",
      "metadata": {
        "description": "Nombre del Data Collection Rule"
      }
    },
    "storageAccountType": {
      "type": "string",
      "defaultValue": "Standard_LRS",
      "allowedValues": [
        "Standard_LRS",
        "Standard_GRS",
        "Standard_RAGRS"
      ],
      "metadata": {
        "description": "Storage Account type"
      }
    },
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "Location for all resources."
      }
    },
    "appServicePlanName": {
      "type": "string",
      "defaultValue": "[format('ASP-{0}', parameters('functionAppName'))]",
      "metadata": {
        "description": "App Service Plan name"
      }
    },
    "githubRepoUrl": {
      "type": "string",
      "defaultValue": "https://github.com/jagudo27/tmv1swp-FA-deployment",
      "metadata": {
        "description": "GitHub repository URL"
      }
    },
    "githubBranch": {
      "type": "string",
      "defaultValue": "main",
      "metadata": {
        "description": "GitHub branch to deploy from"
      }
    },
    "TREND_MICRO_TOKEN": {
      "type": "secureString",
      "metadata": {
        "description": "Token de autenticación para Trend Micro"
      }
    },
    "STREAM_NAME": {
      "type": "string",
      "defaultValue": "Custom-TrendMicroOATEvents_CL",
      "metadata": {
        "description": "Nombre del stream de ingesta"
      }
    }
  },
  "variables": {
    "functionWorkerRuntime": "python",
    "linuxFxVersion": "PYTHON|3.12",
    "monitoringMetricsPublisherRoleId": "3913510d-42f4-4e42-8a64-420c390055eb"
  },
  "resources": [
    {
      "type": "Microsoft.OperationalInsights/workspaces",
      "apiVersion": "2023-09-01",
      "name": "[parameters('logAnalyticsWorkspaceName')]",
      "location": "[parameters('location')]",
      "properties": {
        "sku": {
          "name": "PerGB2018"
        },
        "retentionInDays": 30,
        "features": {
          "enableLogAccessUsingOnlyResourcePermissions": true
        }
      },
      "tags": {
        "azd-env-name": "[parameters('functionAppName')]"
      }
    },
    {
      "type": "Microsoft.Insights/dataCollectionEndpoints",
      "apiVersion": "2023-03-11",
      "name": "[parameters('dataCollectionEndpointName')]",
      "location": "[parameters('location')]",
      "properties": {
        "description": "Data Collection Endpoint for Trend Micro ETL",
        "networkAcls": {
          "publicNetworkAccess": "Enabled"
        }
      },
      "tags": {
        "azd-env-name": "[parameters('functionAppName')]"
      }
    },
    {
      "type": "Microsoft.Insights/dataCollectionRules",
      "apiVersion": "2023-03-11",
      "name": "[parameters('dataCollectionRuleName')]",
      "location": "[parameters('location')]",
      "properties": {
        "description": "Data Collection Rule for Trend Micro OAT Events",
        "dataCollectionEndpointId": "[resourceId('Microsoft.Insights/dataCollectionEndpoints', parameters('dataCollectionEndpointName'))]",
        "destinations": {
          "logAnalytics": [
            {
              "name": "LogAnalyticsDestination",
              "workspaceResourceId": "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('logAnalyticsWorkspaceName'))]"
            }
          ]
        },
        "dataFlows": [
          {
            "streams": [
              "[parameters('STREAM_NAME')]"
            ],
            "destinations": [
              "LogAnalyticsDestination"
            ],
            "transformKql": "source",
            "outputStream": "[parameters('STREAM_NAME')]"
          }
        ],
        "streamDeclarations": {
          "[parameters('STREAM_NAME')]": {
            "columns": [
              {
                "name": "TimeGenerated",
                "type": "datetime"
              },
              {
                "name": "EventId",
                "type": "string"
              },
              {
                "name": "EventType",
                "type": "string"
              },
              {
                "name": "Severity",
                "type": "string"
              },
              {
                "name": "EventSource",
                "type": "string"
              },
              {
                "name": "EventData",
                "type": "dynamic"
              }
            ]
          }
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Insights/dataCollectionEndpoints', parameters('dataCollectionEndpointName'))]",
        "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('logAnalyticsWorkspaceName'))]"
      ],
      "tags": {
        "azd-env-name": "[parameters('functionAppName')]"
      }
    },
    {
      "type": "Microsoft.Storage/storageAccounts",
      "apiVersion": "2022-05-01",
      "name": "[parameters('storageAccountName')]",
      "location": "[parameters('location')]",
      "sku": {
        "name": "[parameters('storageAccountType')]"
      },
      "kind": "StorageV2",
      "properties": {
        "accessTier": "Hot"
      },
      "tags": {
        "azd-env-name": "[parameters('functionAppName')]"
      }
    },
    {
      "type": "Microsoft.Web/serverfarms",
      "apiVersion": "2024-11-01",
      "name": "[parameters('appServicePlanName')]",
      "location": "[parameters('location')]",
      "sku": {
        "name": "Y1",
        "tier": "Dynamic",
        "size": "Y1",
        "family": "Y"
      },
      "properties": {
        "reserved": true
      },
      "tags": {
        "azd-env-name": "[parameters('functionAppName')]"
      }
    },
    {
      "type": "Microsoft.Web/sites",
      "apiVersion": "2024-11-01",
      "name": "[parameters('functionAppName')]",
      "location": "[parameters('location')]",
      "kind": "functionapp,linux",
      "identity": {
        "type": "SystemAssigned"
      },
      "properties": {
        "enabled": true,
        "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', parameters('appServicePlanName'))]",
        "reserved": true,
        "isXenon": false,
        "hyperV": false,
        "siteConfig": {
          "numberOfWorkers": 1,
          "linuxFxVersion": "[variables('linuxFxVersion')]",
          "acrUseManagedIdentityCreds": false,
          "alwaysOn": false,
          "http20Enabled": false,
          "functionAppScaleLimit": 200,
          "minimumElasticInstanceCount": 0,
          "appSettings": [
            {
              "name": "AzureWebJobsStorage",
              "value": "[format('DefaultEndpointsProtocol=https;AccountName={0};EndpointSuffix={1};AccountKey={2}', parameters('storageAccountName'), environment().suffixes.storage, listKeys(resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName')), '2022-05-01').keys[0].value)]"
            },
            {
              "name": "WEBSITE_CONTENTAZUREFILECONNECTIONSTRING",
              "value": "[format('DefaultEndpointsProtocol=https;AccountName={0};EndpointSuffix={1};AccountKey={2}', parameters('storageAccountName'), environment().suffixes.storage, listKeys(resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName')), '2022-05-01').keys[0].value)]"
            },
            {
              "name": "WEBSITE_CONTENTSHARE",
              "value": "[toLower(parameters('functionAppName'))]"
            },
            {
              "name": "FUNCTIONS_EXTENSION_VERSION",
              "value": "~4"
            },
            {
              "name": "FUNCTIONS_WORKER_RUNTIME",
              "value": "[variables('functionWorkerRuntime')]"
            },
            {
              "name": "AzureWebJobsFeatureFlags",
              "value": "EnableWorkerIndexing"
            },
            {
              "name": "TREND_MICRO_TOKEN",
              "value": "[parameters('TREND_MICRO_TOKEN')]"
            },
            {
              "name": "DATA_COLLECTION_ENDPOINT",
              "value": "[reference(resourceId('Microsoft.Insights/dataCollectionEndpoints', parameters('dataCollectionEndpointName')), '2023-03-11').logsIngestion.endpoint]"
            },
            {
              "name": "DATA_COLLECTION_RULE_ID",
              "value": "[reference(resourceId('Microsoft.Insights/dataCollectionRules', parameters('dataCollectionRuleName')), '2023-03-11').immutableId]"
            },
            {
              "name": "STREAM_NAME",
              "value": "[parameters('STREAM_NAME')]"
            }
          ]
        },
        "scmSiteAlsoStopped": false,
        "clientAffinityEnabled": false,
        "clientAffinityProxyEnabled": false,
        "clientCertEnabled": false,
        "clientCertMode": "Required",
        "hostNamesDisabled": false,
        "containerSize": 0,
        "dailyMemoryTimeQuota": 0,
        "httpsOnly": false,
        "publicNetworkAccess": "Enabled",
        "storageAccountRequired": false,
        "keyVaultReferenceIdentity": "SystemAssigned"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Web/serverfarms', parameters('appServicePlanName'))]",
        "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName'))]",
        "[resourceId('Microsoft.Insights/dataCollectionEndpoints', parameters('dataCollectionEndpointName'))]",
        "[resourceId('Microsoft.Insights/dataCollectionRules', parameters('dataCollectionRuleName'))]"
      ],
      "tags": {
        "azd-env-name": "[parameters('functionAppName')]"
      }
    },
    {
      "type": "Microsoft.Web/sites/sourcecontrols",
      "apiVersion": "2024-11-01", 
      "name": "[format('{0}/web', parameters('functionAppName'))]",
      "properties": {
        "repoUrl": "[parameters('githubRepoUrl')]",
        "branch": "[parameters('githubBranch')]",
        "isManualIntegration": false,
        "isGitHubAction": true,
        "gitHubActionConfiguration": {
          "generateWorkflowFile": false,
          "workflowSettings": {
            "appType": "functionapp",
            "publishType": "code",
            "os": "linux",
            "runtimeStack": "python",
            "workflowApiVersion": "2020-12-01",
            "slotName": "production",
            "variables": {
              "AZURE_FUNCTIONAPP_PACKAGE_PATH": "."
            }
          }
        }
      },
      "dependsOn": [
      ]
    },
    {
      "type": "Microsoft.Web/sites/basicPublishingCredentialsPolicies",
      "apiVersion": "2024-11-01",
      "name": "[concat(parameters('functionAppName'), '/ftp')]",
      "location": "[parameters('location')]",
      "dependsOn": [
        "[resourceId('Microsoft.Web/sites', parameters('functionAppName'))]"
      ],
      "properties": {
        "allow": true
      }
    },
    {
      "type": "Microsoft.Web/sites/basicPublishingCredentialsPolicies",
      "apiVersion": "2024-11-01",
      "name": "[concat(parameters('functionAppName'), '/scm')]",
      "location": "[parameters('location')]",
      "dependsOn": [
        "[resourceId('Microsoft.Web/sites', parameters('functionAppName'))]"
      ],
      "properties": {
        "allow": true
      }
    }
  ],
  "outputs": {
    "functionAppName": {
      "type": "string",
      "value": "[parameters('functionAppName')]"
    },
    "functionAppUrl": {
      "type": "string",
      "value": "[format('https://{0}.azurewebsites.net', parameters('functionAppName'))]"
    },
    "storageAccountName": {
      "type": "string",
      "value": "[parameters('storageAccountName')]"
    },
    "logAnalyticsWorkspaceName": {
      "type": "string",
      "value": "[parameters('logAnalyticsWorkspaceName')]"
    },
    "logAnalyticsWorkspaceId": {
      "type": "string",
      "value": "[reference(resourceId('Microsoft.OperationalInsights/workspaces', parameters('logAnalyticsWorkspaceName')), '2023-09-01').customerId]"
    },
    "dataCollectionEndpointName": {
      "type": "string",
      "value": "[parameters('dataCollectionEndpointName')]"
    },
    "dataCollectionEndpoint": {
      "type": "string",
      "value": "[reference(resourceId('Microsoft.Insights/dataCollectionEndpoints', parameters('dataCollectionEndpointName')), '2023-03-11').logsIngestion.endpoint]"
    },
    "dataCollectionRuleName": {
      "type": "string",
      "value": "[parameters('dataCollectionRuleName')]"
    },
    "dataCollectionRuleId": {
      "type": "string",
      "value": "[reference(resourceId('Microsoft.Insights/dataCollectionRules', parameters('dataCollectionRuleName')), '2023-03-11').immutableId]"
    },
    "principalId": {
      "type": "string",
      "value": "[reference(resourceId('Microsoft.Web/sites', parameters('functionAppName')), '2024-11-01', 'full').identity.principalId]"
    }
  }
}
